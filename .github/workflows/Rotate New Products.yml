name: Rotate "New" Products on Supabase Ecommerce Project

on:
  schedule:
    - cron: '0 9 * * 1' # Every Monday at 09:00 UTC
  workflow_dispatch:

jobs:
  rotate-new-products:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Supabase Client
        run: npm install @supabase/supabase-js --force

      - name: Rotate New Products
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_PROJECT_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_PROJECT_SERVICE_ROLE_KEY }}
        run: |
          node -e "
          (async () => {
            const { createClient } = require('@supabase/supabase-js');
            const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

            try {
              // Step 1: Get 10 random products that are not currently marked as new
              const { data: randomProducts, error: randomError } = await supabase
                .from('products')
                .select('id')
                .eq('new', false)
                .order('RANDOM()')
                .limit(10);

              if (randomError) throw randomError;

              const newProductIds = randomProducts.map(p => p.id);
              console.log('Selected new product IDs:', newProductIds);

              // Step 2: Set `new` to false for all currently new products
              const { error: resetError } = await supabase
                .from('products')
                .update({ new: false })
                .eq('new', true);

              if (resetError) throw resetError;

              // Step 3: Set `new` to true for the 10 selected products
              const { error: setError } = await supabase
                .from('products')
                .update({ new: true })
                .in('id', newProductIds);

              if (setError) throw setError;

              console.log('Successfully rotated new products.');
            } catch (err) {
              console.error('Error rotating new products:', err);
              process.exit(1);
            }
          })();
          "
